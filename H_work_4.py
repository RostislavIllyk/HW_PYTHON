"""

1.)

Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной 
платы сотрудника. В расчете необходимо использовать формулу: (выработка в 
часах*ставка в час) + премия. Для выполнения расчета для конкретных значений
необходимо запускать скрипт с параметрами.
"""


from sys import argv

print(len(argv))

if ( len(argv))!=4:
    print('Вы указали неверное количество параметров.')
    exit()

znach = argv [1:]

try:
    znach = [float(z) for z in znach]
except:
    print('Все аргументы должны быть числами  ...')
    exit()
    
if (False in {True if float(ch) > 0 else False for ch in znach}):
    print('Все аргументы должны быть числами >=0 ...')
    exit()


script_name, first_param, second_param, third_param = argv
              
    
print("Имя скрипта: ", script_name)
print("выработка в часах", first_param)
print("ставка в час ", second_param)
print("премия: ", third_param)

ZP = float(first_param)*float(second_param)+float(third_param)

print("Заработная плата сотрудника: ", ZP)
        
        
print("======================================================================")
print("======================================================================")



"""

2.)

Представлен список чисел. Необходимо вывести элементы исходного списка, 
значения которых больше предыдущего элемента.
Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. Для 
формирования списка использовать генератор.

"""

my_list = [1, 3, 4, 5, 0, -1, -5, 6, -9, 3, 0, 55, -77, 10]

new_list=[my_list[i+1] for i in range(len(my_list)-1) if my_list[i]<my_list[i+1]]

print(new_list)



print("======================================================================")
print("======================================================================")


"""

3.)

Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. 
Необходимо решить задание в одну строку.
Подсказка: использовать функцию range() и генератор.

"""

new_list = [i for i in range(20,241) if ((i%20==0) or (i%21==0))]
print(new_list)

print("======================================================================")
print("======================================================================")

"""

4.)

Представлен список чисел. Определить элементы списка, не имеющие повторений. 
Сформировать итоговый массив чисел, соответствующих требованию. Элементы 
вывести в порядке их следования в исходном списке. Для выполнения задания 
обязательно использовать генератор.
"""


my_list = [1, 3, 4, 5, 0, -1, -5, 6, -9, 3, 0, 55, -77, 10, 6, 4]

new_list=[my_list[i] for i in range(len(my_list)) if my_list.count(my_list[i])==1]

print(new_list)

print("======================================================================")
print("======================================================================")


"""

5.)

Реализовать формирование списка, используя функцию range() и возможности 
генератора. В список должны войти четные числа от 100 до 1000 (включая границы).
 Необходимо получить результат вычисления произведения всех элементов списка.
Подсказка: использовать функцию reduce().
"""
my_list=[i for i in range(100, 1001)]

from functools import reduce

def my_func(prev_el, el):
    # prev_el - предыдущий элемент
    # el - текущий элемент
    return float(prev_el) * float(el)

mult = reduce(my_func, my_list)

print(f"Ну очень большое число: {mult:e} во float не помещается в int не читается...")

print("======================================================================")
print("======================================================================")


"""

6.)

Реализовать два небольших скрипта: 
а) бесконечный итератор, генерирующий целые числа, начиная с указанного, 
б) бесконечный итератор, повторяющий элементы некоторого списка, определенного заранее.
Подсказка: использовать функцию count() и cycle() модуля itertools.
"""

from itertools import count

start_number=9

for el in count(start_number):
    # condition to exit
    if el > 39:
        
        break
    else:
        print(el)


from itertools import cycle
my_list = [1, 3, 4, 5, 0, -1, -5, 6, -9, 3, 0, 55, -77, 10, 6, 4]

с = 0
for el in cycle(my_list):
    # condition to exit    
    if с > 30:
        break
    print(f"{el}")
    
    с += 1


print("======================================================================")
print("======================================================================")


"""

7.)

Реализовать генератор с помощью функции с ключевым словом yield, создающим 
очередное значение. При вызове функции должен создаваться объект-генератор. 
Функция должна вызываться следующим образом: for el in fibo_gen(). Функция 
отвечает за получение факториала числа, а в цикле необходимо выводить только 
первые 15 чисел.
Подсказка: факториал числа n — произведение чисел от 1 до n. Например, 
факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.

"""

def fibo_gen():
    f=1
    a=1
    while True:
        f=f*a
        yield f
        a=a+1

c=1
for el in fibo_gen():
    
    print (el)
    if c==15:
        break
    c=c+1
    
    
    
    
print("======================================================================")
print("======================================================================")







