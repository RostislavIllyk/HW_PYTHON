# -*- coding: utf-8 -*-
"""
Created on Thu Nov 28 23:59:09 2019

@author: rost_
"""

import numpy as np
import matplotlib.pyplot as plt
#import random

'''
1.Задание (теорема сложения)
Найти вероятность выпадения 2 или 5 очков при подбрасывании игральной кости, 
на гранях которой имеются соответственно 1,2,3,4,5 и 6 очков.

'''

r2=0
b5=0

iterations=1000000
for i in range(iterations):
    choice = np.random.randint(0, 5+1, 1)[0]    
    if choice == 2 :
        r2=r2+1
    if choice == 5:
        b5=b5+1
        
print('Количесва событий теста        : ',r2,b5)
print('По результатам теста получили  : ',r2/iterations,b5/iterations)
print('Согласно теорем должны получить: ',round(1/6, 6), round(1/6, 6) )
        
print()
print('======================================================================')


'''
2 .Задание (теорема умножения)
Найти вероятность того, что при двух подбрасываниях той же самой игральной 
кости сначала выпадет 2, а затем 5.
'''



r2=0
b5=0

iterations=1000000
for i in range(iterations):
    choice = np.random.randint(0, 5+1, 1)[0]    
    if choice == 2 :
        r2=r2+1
        choice = np.random.randint(0, 5+1, 1)[0]    
        if choice == 5:
            b5=b5+1
        
        
        
        
print('Количесво событий win теста    : ',b5)
print('По результатам теста получили  : ',b5/iterations)
print('Согласно теорем должны получить: ', round(1/36, 6) )
        
print()
print('======================================================================')


'''
3 .Задание 
Найти вероятность выпадения 2 и 5 очков при двух подбрасываниях той же самой 
игральной игральной кости.

'''


c=0

iterations=1000000


for i in range(iterations):
    r2=0
    b5=0
    
    choice = np.random.randint(0, 5+1, 1)[0]    
    if choice == 2 :
        r2=1
    if choice == 5:
        b5=1
        
    choice = np.random.randint(0, 5+1, 1)[0]    

    if choice == 2 :
        r2=1
    if choice == 5:
        b5=1


    if r2>0 and b5>0:
        c=c+1
        
        
print('Количесво событий win теста    : ',c)
print('По результатам теста получили  : ',c/iterations)
print('Согласно теорем должны получить: ',round((1/3)*(1/6), 6) )
        
print()
print('======================================================================')


'''
4 .Задание  (Геометрическая вероятность + интервалы)
На отрезке AB длиной 20 см наугад отметили точку C. Какова вероятность, что 
она находится на расстоянии не более 9 см от точки А и 
не более 15 см от точки В?

'''

print('Вероятность, что она находится на расстоянии не более 9 см от точки А и \
      не более 15 см от точки В: ', 4/20)

# Ответ 4/20


fig = plt.figure()

ax = plt.gca()
ax.spines['left'].set_position('zero')
ax.spines['bottom'].set_position('zero')
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
plt.grid(True) 


x = np.linspace(100,500, 3000)

plt.plot([0,9],[0,0],  color='r', linewidth = 4)
plt.plot([20,5],[0,0], color='b', linewidth = 4)
plt.plot([5,9],[0,0],  color='g', linewidth = 15)

plt.show()




print()
print('======================================================================')

'''
5 .Задание. 
Телефонный номер состоит из 7 цифр. Какова вероятность, что это номер 8882227?

'''
print('probability = 1/10**7')

print()
print('======================================================================')


'''
6 .Задание. 
Набирая номер телефона, абонент забыл 2 последние цифры, и, помня только то, 
что эти цифры различны и среди них нет нуля, стал набирать их наудачу. Сколько
вариантов ему надо перебрать, чтобы наверняка найти нужный номер? Какова 
вероятность того, что он угадает номер с первого раза?

'''


#Ответ   72=90-9-9
#Проверка 

choice = np.random.randint(10, 99+1, 10000)  

choice = set(choice)
choice = np.array(list(choice))
#choice = choice.astype(str)
final_list=[]
for i in choice:
    if (i%10!=0):
        if (i%10!=i//10): 
#            if (i[1]!=0):
                final_list.append(i)

print('Всего возможных вариантов:', len(final_list))



print()
print('======================================================================')



'''
7 .Задание** (необязательное) 
Чёрный куб покрасили снаружи белой краской, затем разрезали на 27 одинаковых 
маленьких кубиков и как попало сложили из них большой куб. С какой вероятностью 
все грани этого куба будут белыми?

'''


prob = (1/27)*\
    (6/26)*(5/25)*(4/24)*(3/23)*(2/22)*(1/21)*(1/6)**6*\
    (8/20)*(7/19)*(6/18)*(5/17)*(4/16)*(3/15)*(2/14)*(1/13)*(1/8)**8*\
    1*(1/12)**12


print('prob: ', prob)
#prob:  1.8298051356415005e-37
print()
print('======================================================================')












